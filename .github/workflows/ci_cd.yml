on:
  push:
    branches: [ develop, staging, main ]
  pull_request:
    branches: [ develop, staging, main ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.3

      - name: Gem cache
        id: cache-bundle
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundle-${{ hashFiles('**/Gemfile.lock') }}

      - name: Install dependent libraries
        run: |
          sudo apt-get install libpq-dev
          gem install bundler

      - name: Install gems
        run: |
          bundle install --jobs 4 --retry 3

      - name: Setup Database
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rails db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Run rubocop 
        run: |
          bundle exec rubocop

      # - name: Security audit dependencies
      #   run: |
      #     bundle exec bundler audit --update

      - name: Security audit application code
        run: bundle exec brakeman -q -w2

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/databasename
        run: |
          bin/rails db:create db:schema:load
          bundle exec rspec

  DeployStaging:
    name: Deploy to Staging 
    if: github.event_name == 'push' && github.ref == 'refs/heads/staging'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "discova-staging"
          heroku_email: "promiseukaimo@gmail.com"


  DeployProd:
    name: Deploy to Production 
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [DeployStaging]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "discova-prod"
          heroku_email: "promiseukaimo@gmail.com"






# name: CI + CD

# on:
#   push:
#     branches: [ develop, staging, main ]
#   pull_request:
#     branches: [ develop, staging, main ]
#   workflow_dispatch:

# jobs:
#   Build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: 3.1.3

#       - name: Install dependencies
#         run: |
#           gem install bundler
#           bundle install --jobs 4 --retry 3

#       - name: Install gems
#         run: |
#           bundle install

#       # - name: Prepare database
#       #   env:
#       #     PGHOST: localhost
#       #     PGUSER: postgres
#       #     PGPASSWORD: postgres
#       #     RAILS_ENV: test
#       #   run: |
#       #     bundle exec rails db:prepare

#   Test:
#     needs: Build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Ruby
#         uses: ruby/setup-ruby@v1
#         with:
#           ruby-version: 3.1.3

#       - name: Install dependencies
#         run: |
#           gem install bundler
#           bundle install --jobs 4 --retry 3

#       - name: Install gems
#         run: |
#           bundle install

#       # Uncomment the following step to prepare the database (if required).
#       # - name: Prepare database
#       #   env:
#       #     PGHOST: localhost
#       #     PGUSER: postgres
#       #     PGPASSWORD: postgres
#       #     RAILS_ENV: test
#       #   run: |
#       #     bundle exec rails db:prepare

#       - name: Run rspec tests 
#         env:
#           PGHOST: localhost
#           PGUSER: postgres
#           PGPASSWORD: postgres
#           RAILS_ENV: test
#         run: |
#           bundle exec rspec

#       # Uncomment the following step to run rubocop (if required).
#       # - name: Run rubocop 
#       #   run: |
#       #     bundle exec rubocop

#       # Uncomment the following steps to perform security audits (if required).
#       # - name: Security audit dependencies
#       #   run: bundle exec bundler audit --update

#       # - name: Security audit application code
#       #   run: bundle exec brakeman -q -w2